<Window x:Class="GasNotifier.NotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GasNotifier"
        mc:Ignorable="d"
        ShowInTaskbar="False"
        Title="NotificationWindow" Width="350" SizeToContent="Height" WindowStyle="None" AllowsTransparency="True" Background="Transparent" Height="125">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="CloseMinMaxButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardRectangleStart">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectOverlay">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.195"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardRectangleEnd">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectOverlay">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.195"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Rectangle x:Name="rectBackground" Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Stroke="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch"/>
                            <Rectangle x:Name="rectOverlay" Fill="Black" HorizontalAlignment="Stretch" Stroke="Transparent" VerticalAlignment="Stretch" Opacity="0"/>
                            <Rectangle x:Name="rectPressedOverlay" Fill="Black" HorizontalAlignment="Stretch" Stroke="Transparent" VerticalAlignment="Stretch" Opacity="0"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" Height="Auto" VerticalAlignment="Center" Width="Auto" Margin="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="rectPressedOverlay" Value="0.25"/>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="StoryboardRectangleEnd_BeginStoryboard" Storyboard="{StaticResource StoryboardRectangleEnd}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="StoryboardRectangleStart_BeginStoryboard" Storyboard="{StaticResource StoryboardRectangleStart}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="{x:Type Button}" x:Key="toastCloseButton">
            <Image VerticalAlignment="Center" Height="30" HorizontalAlignment="Center" Source="close.png"/>
        </ControlTemplate>
        
    </Window.Resources>
    
    <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" MouseLeave="Grid_MouseLeave">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#eeeeee" Offset="0" />
                <GradientStop Color="#c3c3c3" Offset="1" />
                <GradientStop Color="#eeeeee" Offset="0.866" />
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="125" />

        </Grid.RowDefinitions>
        <Grid  VerticalAlignment="Top" Background="Black" Grid.Row="0" Height="30">
            <Grid.Effect>
                <DropShadowEffect  BlurRadius="10" ShadowDepth="3" Direction="270" Opacity="0.2" />
            </Grid.Effect>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />

            </Grid.ColumnDefinitions>
            <DockPanel Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Left" LastChildFill="False" Width="349">
                <Image x:Name="AVARTA" Height="18" Width="18" Panel.ZIndex="1" HorizontalAlignment="Left" Margin="14,0,0,4" Source="logo.ico" Stretch="Uniform" RenderTransformOrigin="0.396,1.005" VerticalAlignment="Bottom"/>

                <Label Content=" Gas Fee Alarm" VerticalContentAlignment="Center" VerticalAlignment="Bottom" Foreground="White"
                       FontWeight="SemiBold" FontSize="14" IsManipulationEnabled="True" Padding="0,5,5,5" Margin="7,-1,0,0" Height="31" Width="100" />
                <Label x:Name="alarm_date" Content="2017/12/28" VerticalContentAlignment="Center" VerticalAlignment="Bottom" Foreground="White"
                    FontWeight="SemiBold" FontSize="12" IsManipulationEnabled="True" Padding="0,5,5,5" Margin="7,-1,0,0" Height="31" Width="168" />
                <Button Width="35" Template="{StaticResource toastCloseButton}" Click="CloseButton_OnClick" Focusable="False" />
            </DockPanel>
        </Grid>

        <Grid Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
            <Label x:Name="lbl_message" FontSize="20" Content="Label" HorizontalAlignment="Left" Foreground="#FF5F5F5F"  VerticalAlignment="Center" VerticalContentAlignment="Center"  Width="310" RenderTransformOrigin="0.5,0.5" FontFamily="Sitka Small" Height="39" Margin="19,36,0,50"/>
            <Label x:Name="lbl_information"  FontSize="20" Content="Label" HorizontalAlignment="Left" Foreground="#FF5F5F5F"  VerticalAlignment="Center" VerticalContentAlignment="Center"  Width="310" RenderTransformOrigin="0.5,0.5" FontFamily="Sitka Small" Height="39" Margin="19,75,0,11" FontWeight="Bold"/>
        </Grid>
        <Grid.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard x:Name="StoryboardLoad">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.0" To="1.0" Duration="0:0:2" />
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="1.0" To="0.0" Duration="0:0:8" BeginTime="0:0:5" Completed="DoubleAnimationCompleted"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <RemoveStoryboard BeginStoryboardName="StoryboardLoad"/>
                    <RemoveStoryboard BeginStoryboardName="StoryboardFade"/>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard x:Name="StoryboardFade">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="1.0" To="0.0" Duration="0:0:8" BeginTime="0:0:2" Completed="DoubleAnimationCompleted"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Grid.Triggers>
    </Grid>

</Window>
